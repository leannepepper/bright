import * as THREE from 'three'
import { uniform } from 'three/tsl'

export const GRID_SIZE = 40.0
export const gridColsUniform = uniform(40)
export const colors = {
  orange: '#ff3901',
  cyan: '#0fffff',
  green: '#5cb000',
  pink: '#ff8a85',
  yellow: '#fefc2e',
  red: '#ff9200',
  offWhite: '#f5f5f5'
}
export const templateNames = {
  empty: 'empty',
  flower: 'flower'
}

export function buildDataTexture (aspect) {
  const cols = Math.ceil(GRID_SIZE * aspect)
  gridColsUniform.value = cols

  const data = new Uint8Array(cols * GRID_SIZE * 4)
  const tex = new THREE.DataTexture(data, cols, GRID_SIZE, THREE.RGBAFormat)
  tex.minFilter = tex.magFilter = THREE.NearestFilter
  tex.needsUpdate = true
  return tex
}

export let selectedTexture = buildDataTexture(
  window.innerWidth / window.innerHeight
)

export function updateSelectedTexture (aspect) {
  const cols = Math.ceil(GRID_SIZE * aspect)

  gridColsUniform.value = cols
  selectedTexture.image.data = new Uint8Array(cols * GRID_SIZE * 4)
  selectedTexture.image.width = cols
  selectedTexture.image.height = GRID_SIZE

  // force a new texture on the GPU, not a great solution, this will clear the texture.
  selectedTexture.dispose()
  selectedTexture.needsUpdate = true
}

export const flowerTemplateData = [
  [1, 10],
  [1, 11],
  [2, 10],
  [2, 11],
  [2, 12],
  [3, 12],
  [3, 11],
  [3, 10],
  [3, 9],
  [4, 9],
  [4, 10],
  [4, 11],
  [4, 12],
  [4, 13],
  [5, 12],
  [5, 11],
  [5, 10],
  [5, 9],
  [6, 10],
  [6, 11],
  [6, 12],
  [7, 11],
  [7, 10],
  [7, 12],
  [8, 13],
  [8, 12],
  [8, 11],
  [9, 10],
  [9, 11],
  [9, 12],
  [10, 12],
  [10, 11],
  [9, 13],
  [10, 13],
  [10, 10],
  [11, 10],
  [9, 9],
  [8, 10],
  [11, 11],
  [11, 12],
  [6, 13],
  [7, 13],
  [8, 14],
  [5, 13],
  [6, 14],
  [7, 14],
  [8, 15],
  [4, 14],
  [5, 14],
  [6, 15],
  [7, 15],
  [8, 16],
  [7, 16],
  [6, 16],
  [5, 15],
  [4, 15],
  [4, 16],
  [5, 16],
  [6, 17],
  [5, 17],
  [4, 17],
  [12, 12],
  [12, 13],
  [12, 11],
  [13, 10],
  [13, 11],
  [13, 12],
  [13, 13],
  [14, 14],
  [14, 13],
  [14, 12],
  [14, 11],
  [14, 10],
  [15, 13],
  [15, 12],
  [15, 11],
  [15, 10],
  [16, 11],
  [16, 12],
  [16, 13],
  [17, 12],
  [17, 11],
  [7, 9],
  [8, 9],
  [9, 8],
  [9, 7],
  [8, 8],
  [7, 8],
  [6, 9],
  [5, 8],
  [6, 8],
  [7, 7],
  [7, 6],
  [8, 7],
  [8, 6],
  [9, 6],
  [6, 7],
  [5, 7],
  [5, 6],
  [6, 6],
  [7, 5],
  [5, 5],
  [6, 5],
  [11, 13],
  [10, 14],
  [9, 14],
  [9, 15],
  [10, 15],
  [11, 14],
  [12, 14],
  [13, 14],
  [12, 15],
  [11, 15],
  [11, 16],
  [10, 16],
  [9, 16],
  [10, 17],
  [12, 16],
  [13, 15],
  [13, 16],
  [12, 17],
  [11, 17],
  [12, 18],
  [13, 17],
  [10, 9],
  [11, 9],
  [12, 10],
  [13, 9],
  [12, 9],
  [12, 8],
  [11, 8],
  [10, 8],
  [10, 7],
  [11, 7],
  [13, 8],
  [14, 8],
  [14, 9],
  [12, 7],
  [11, 6],
  [12, 6],
  [13, 6],
  [14, 7],
  [13, 7],
  [14, 6],
  [13, 5],
  [6, 18],
  [6, 19],
  [5, 19],
  [4, 20],
  [3, 20],
  [2, 21],
  [2, 22],
  [1, 22],
  [1, 23],
  [1, 24],
  [2, 25],
  [2, 26],
  [3, 26],
  [4, 27],
  [1, 26],
  [1, 27],
  [1, 28],
  [1, 29],
  [1, 30],
  [5, 27],
  [6, 28],
  [7, 28],
  [8, 29],
  [9, 29],
  [10, 30],
  [10, 31],
  [11, 29],
  [11, 30],
  [11, 31],
  [12, 32],
  [12, 31],
  [12, 30],
  [12, 29],
  [13, 28],
  [13, 29],
  [13, 30],
  [13, 31],
  [13, 32],
  [14, 32],
  [14, 31],
  [14, 30],
  [14, 29],
  [15, 29],
  [15, 30],
  [15, 31],
  [16, 31],
  [16, 30],
  [17, 30],
  [18, 30],
  [18, 31],
  [17, 29],
  [18, 29],
  [19, 29],
  [19, 30],
  [19, 31],
  [20, 31],
  [19, 28],
  [18, 28],
  [17, 31],
  [18, 32],
  [20, 30],
  [20, 29],
  [17, 28],
  [16, 29],
  [16, 28],
  [17, 27],
  [15, 28],
  [14, 28],
  [15, 27],
  [16, 27],
  [17, 26],
  [17, 25],
  [16, 26],
  [15, 26],
  [14, 27],
  [13, 27],
  [13, 26],
  [14, 26],
  [15, 25],
  [16, 25],
  [15, 24],
  [14, 25],
  [13, 25],
  [13, 24],
  [14, 24],
  [16, 32],
  [17, 32],
  [18, 33],
  [18, 34],
  [17, 33],
  [16, 33],
  [15, 32],
  [14, 33],
  [15, 33],
  [15, 34],
  [16, 34],
  [16, 35],
  [17, 34],
  [18, 35],
  [17, 35],
  [14, 34],
  [14, 35],
  [15, 35],
  [16, 36],
  [15, 36],
  [14, 36],
  [21, 29],
  [21, 30],
  [21, 28],
  [22, 31],
  [22, 30],
  [22, 29],
  [22, 28],
  [23, 27],
  [23, 28],
  [23, 29],
  [23, 30],
  [23, 31],
  [24, 31],
  [24, 30],
  [24, 29],
  [24, 28],
  [25, 28],
  [25, 29],
  [25, 30],
  [26, 30],
  [26, 29],
  [21, 31],
  [20, 32],
  [19, 32],
  [19, 33],
  [20, 33],
  [21, 32],
  [22, 32],
  [23, 32],
  [22, 33],
  [21, 33],
  [20, 34],
  [19, 34],
  [20, 35],
  [21, 34],
  [22, 34],
  [23, 33],
  [23, 34],
  [22, 35],
  [21, 35],
  [22, 36],
  [23, 35],
  [20, 28],
  [19, 27],
  [18, 27],
  [21, 27],
  [20, 27],
  [19, 26],
  [18, 26],
  [18, 25],
  [19, 25],
  [20, 26],
  [21, 26],
  [22, 27],
  [22, 26],
  [21, 25],
  [20, 25],
  [19, 24],
  [20, 24],
  [21, 24],
  [22, 25],
  [22, 24],
  [21, 23],
  [18, 36],
  [18, 37],
  [18, 38],
  [18, 39],
  [18, 40],
  [19, 40],
  [20, 41],
  [21, 41],
  [22, 42],
  [23, 42],
  [15, 9],
  [16, 9],
  [17, 8],
  [18, 8],
  [19, 7],
  [20, 7],
  [21, 7],
  [22, 8],
  [23, 8],
  [24, 9],
  [25, 9],
  [26, 10],
  [27, 10],
  [27, 11],
  [27, 12],
  [27, 13],
  [27, 14],
  [28, 15],
  [29, 15],
  [30, 16],
  [31, 15],
  [31, 14],
  [31, 13],
  [30, 13],
  [26, 9],
  [26, 8],
  [27, 7],
  [28, 7],
  [29, 6],
  [30, 6],
  [31, 6],
  [32, 7],
  [32, 8],
  [32, 9],
  [33, 9],
  [34, 10],
  [35, 10],
  [36, 11],
  [37, 10],
  [37, 9],
  [37, 8],
  [37, 7],
  [37, 6],
  [36, 6],
  [35, 6],
  [31, 5],
  [30, 7],
  [29, 5],
  [30, 5],
  [23, 41],
  [22, 43],
  [21, 42],
  [22, 41],
  [24, 43],
  [25, 43],
  [1, 34],
  [1, 35],
  [1, 36],
  [2, 37],
  [3, 37],
  [4, 38],
  [5, 38],
  [6, 39],
  [6, 40],
  [6, 41],
  [6, 42],
  [5, 42],
  [4, 43],
  [3, 42],
  [3, 41],
  [2, 31],
  [3, 31],
  [3, 32],
  [2, 33],
  [1, 33]
]
